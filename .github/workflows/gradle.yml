# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # install jfrog CLI
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v1    

    - name: Configure JFrog CLI
      run: |
        jfrog config add uxworkshop --url https://uxworkshop.jfrog.io --user wilhelm@cqse.eu --password cmVmdGtuOjAxOjE3NTE2MjY2Nzc6a0p2d3dYQW9ZRGw5M2dVc0xjeGgwS1ZyS3dD --interactive=false
        
    - name: Get branch name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

    - name: Get commit timestamp
      run: echo "COMMIT_TIMESTAMP=$(git log -1 --format=%ct)" >> $GITHUB_ENV
      
    - name: Get commit hash
      run: echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Upload Coverage to Artifactory
      if: always() && github.event_name == 'push'
      run: |
        jfrog artifactory upload "**/jacocoTestReport.xml" "local/coverage/uploads/${{ env.BRANCH_NAME }}/${{ env.COMMIT_TIMESTAMP }}-${{ env.COMMIT_HASH }}/unit_tests/jacoco/"

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build
